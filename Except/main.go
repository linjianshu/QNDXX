package main

import (
	"fmt"
	"io/ioutil"
	"sort"
	"strconv"
)

// 运行此用来判断哪些同学未提交
func main() {
	//读文件夹
	dir, err := ioutil.ReadDir("C:\\Users\\YourTreeDad\\Desktop\\20-033-11.16")
	if err != nil {
		panic(err)
		return
	}
	//利用学号进行命名
	m := make(map[string]string)
	m["杜勇敢"] = "2020170229"
	m["孟凡森"] = "2020170230"
	m["李文博"] = "2020170231"
	m["杨江帆"] = "2020170232"
	m["边尚琪"] = "2020170233"
	m["王雷"] = "2020170234"
	m["杨庚"] = "2020170235"
	m["涂启添"] = "2020170236"
	m["冯也"] = "2020170237"
	m["窦浩天"] = "2020170238"
	m["权家友"] = "2020170239"
	m["贵兴锋"] = "2020170240"
	m["赵欢"] = "2020170241"
	m["孙一鸣"] = "2020170242"
	m["杜志杰"] = "2020170243"
	m["帅深龙"] = "2020170244"
	m["徐宏坤"] = "2020170245"
	m["陈鑫"] = "2020170246"
	m["鹿牧野"] = "2020170247"
	m["周帆"] = "2020170248"
	m["虢锐"] = "2020170249"
	m["尹群群"] = "2020170250"
	m["白杨"] = "2020170251"
	m["孟丽"] = "2020170252"
	m["陈瀚"] = "2020170253"
	m["李润"] = "2020170254"
	m["李掌珠"] = "2020170255"
	m["杨子健"] = "2020170256"
	m["李晓龙"] = "2020170257"
	m["赵麟寒"] = "2020170258"
	m["蒋晓明"] = "2020170259"
	m["冯家乐"] = "2020170260"
	m["石行"] = "2020170261"
	m["赵仁陈"] = "2020170262"
	m["邓峰"] = "2020170263"
	m["王艺超"] = "2020170264"
	m["赵智健"] = "2020170265"
	m["韩大力"] = "2020170266"
	m["陆国庆"] = "2020170267"
	m["陈涛"] = "2020170268"
	m["周紫剑"] = "2020170269"
	m["刘亦丰"] = "2020170270"
	m["姜晨皓"] = "2020170271"
	m["丁颖"] = "2020170272"
	m["黄以豪"] = "2020170273"
	m["雷俊"] = "2020170274"
	m["贺竞娇"] = "2020170275"
	m["范永正"] = "2020170276"
	m["肖锴"] = "2020170277"
	m["张子豪"] = "2020170278"
	m["钱坤"] = "2020170279"
	m["孙凯"] = "2020170280"
	m["林健树"] = "2020170281"
	m["江文涛"] = "2020170282"
	m["李继恩"] = "2020170283"
	m["牛谊博"] = "2020170284"
	m["赵梦梓"] = "2020170285"

	//m2是学号=>姓名的映射
	m2 := make(map[string]string)
	for key, value := range m {
		m2[value] = key
	}

	start := 2020170229
	end := 2020170285
	//m1初始化认为都没收集到
	m1 := make(map[string]bool)
	for i := start; i <= end; i++ {
		sno := strconv.Itoa(i)
		m1[sno] = true
	}

	//按照文件名排序
	sort.Slice(dir, func(i, j int) bool {
		return dir[i].Name() < dir[j].Name()
	})

	for _, info := range dir {
		if m1[info.Name()[:10]] {
			//把收集到的从集合中除去
			delete(m1, info.Name()[:10])
		}
	}

	//m1 := make(map[string]struct{})
	//m1["2020170269"] = struct{}{} //周紫剑
	//m1["2020170272"] = struct{}{} //丁颖
	//m1["2020170274"] = struct{}{} //雷俊
	//m1["2020170276"] = struct{}{} //范永正
	//m1["2020170278"] = struct{}{} //张子豪
	//m1["2020170279"] = struct{}{} //钱坤
	//m1["2020170280"] = struct{}{} //孙凯
	//m1["2020170282"] = struct{}{} //江文涛

	//剩下的就是未收集到的
	for key := range m1 {
		//if _, ok := m1[key]; !ok {
		fmt.Println(key, m2[key])
		//}
	}
}
